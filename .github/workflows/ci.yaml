name: Test & Release

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.30.0

    - name: Run tests
      working-directory: server
      run: |
        deno test

  version:
    needs: test
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  publish:
    runs-on: ubuntu-latest
    needs: version

    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: 'main'

     # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

    # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: |
      #       ${{ github.actor }}/mimic
      #       ghcr.io/${{ github.repository }}

      - name: Login to Github Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to Github Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ needs.version.outputs.tag }}
          labels: http-mocking,fakerjs,mocking,shopify

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - version

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: 'main'

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.PROJECT_ID }}/shopify-mimmic:${{ needs.version.outputs.tag }}

      - name: Deploy to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          image: gcr.io/${{ secrets.PROJECT_ID }}/shopify-mimmic:${{ needs.version.outputs.tag }}
          service: shopify-mimic
          region: europe-west2
          env_vars: |
            MIMIC_PORT=80
            MIMIC_MOCKS_DIRECTORY="/prefabs/shopfiy/mocks"
            MIMIC_PARTIALS_DIRECTORY="/prefabs/shopfiy/partials"    